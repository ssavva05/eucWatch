var i2c=new I2C();
i2c.setup({scl:D14, sda:D15, bitrate:100000});
var tfk={
	rstP:D39,
	tid:0,
	x:0,
	y:0,
	do:0,
	st:1,
	loop:5,
	init:function(){
		//"ram";
		i2c.writeTo(0x15,65);
		var tp=i2c.readFrom(0x15,105);
		if (tp[10]!=255&&tp[10]) print(tp);

		
		return;
		i2c.writeTo(0x15,0);
		var tp=i2c.readFrom(0x15,7);
		if (tp[2]&&tp[0]!=255) print(tp);
		return;
		
		if ( tp[3] == 128 || (tp[3] === 0 && tp[2] === 1) ) {
			if ( !this.time ) this.time=getTime();
			if ( this.st ) {
				this.st = 0;
				this.do = 1;
				this.x = tp[4];
                this.y = tp[6];
                return;
			}
			if ( this.do && getTime() - this.time > 1 ) { 
				this.do = 0 ;
				print(12,this.x,this.y);
				//touchHandler[face.pageCurr](12,this.x,this.y);
				return;
			}else if ( this.do && !tp[1] ) {
				var a=0;
				if (tp[6]>=this.y+30) a = 1;
				else if (tp[6]<=this.y-30) a = 2;
				else if (tp[4]<=this.x-30) a = 3;
				else if (tp[4]>=this.x+30) a = 4;
				if ( a != 0 && this.aLast != a ) {
                    this.aLast=a;
					this.do=0;
					//touchHandler[face.pageCurr](a,this.x,this.y);
					print(a,this.x,this.y);
					return;
				}
			}else if ( this.do ){
				if ( tp[1] == 5 || tp[1] ==12 ){
					this.do=0;
					//tfk.emit("touch",
					print(tp[1],this.x,this.y);
                    //touchHandler[face.pageCurr](tp[1],this.x,this.y);
                    return;
				}
			}
		}else if ( (tp[3] == 255 || tp[3] == 0)  && !this.st ) {
			if (this.do===1){
              this.do=0;
			print(5,this.x,this.y);
              //touchHandler[face.pageCurr](5,this.x,this.y);
			  return;
            }
            this.aLast=0;
			this.st = 1;
            this.time = 0;
		}
	},
	start:function(){ 
		if (this.tid) clearInterval(this.tid);
		digitalPulse(this.rstP,1,[10,50]); //touch wake
        this.st=1;
		this.tid=setInterval(function(){
			tfk.init();
		},this.loop);
	},
	exit:function(){
		if (this.tid) clearInterval(this.tid);this.tid=0;
	    digitalPulse(this.rstP,1,[5,50]);setTimeout(()=>{i2c.writeTo(0x15,0xa5,3);},100);
		this.aLast=0;
		this.st = 1;
		this.time = 0;
	}
};	
//i2c.writeTo(0x15,0xE5,3);

